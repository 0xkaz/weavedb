# domain: apis
# descriptors:
#   - key: generic_key
#     value: foobar1
#     rate_limit:
#       unit: second
#       requests_per_unit: 10
# - key: generic_key
#   value: foobar2
#   rate_limit:
#     unit: second
#     requests_per_unit: 5
# - key: generic_key
#   value: foobar3
#   rate_limit:
#     unit: second
#     requests_per_unit: 1

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9914 }

static_resources:
  listeners:
    - name: listener_0
      address:
        # socket_address: { address: 0.0.0.0, port_value: 18080 }

        socket_address:
          address: 0.0.0.0
          port_value: 18080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                # codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  # name: local_route
                  virtual_hosts:
                    - name: default
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            # cluster: rate_limit_cluster
                            cluster: echo_service
                            # timeout: 0s
                            # max_stream_duration:
                            #   grpc_timeout_header_max: 0s
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                # http_filters:
                #   - name: envoy.rate_limit
                #     typed_config:
                #       "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                #       domain: apis
                #       failure_mode_deny: false
                #       rate_limit_service:
                #         transport_api_version: v3
                #         grpc_service:
                #           envoy_grpc:
                #             # cluster_name: rate_limit_cluster
                #             cluster_name: echo_service
                #           timeout: 0.25s

                  # - name: envoy.filters.http.local_ratelimit
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                  #     stat_prefix: http_local_rate_limiter
                  #     token_bucket:
                  #       # max_tokens: 10000
                  #       # tokens_per_fill: 1000
                  #       max_tokens: 100
                  #       tokens_per_fill: 100

                  #       fill_interval: 1s
                  #     filter_enabled:
                  #       runtime_key: local_rate_limit_enabled
                  #       default_value:
                  #         numerator: 100
                  #         # numerator: 10
                  #         denominator: HUNDRED
                  #         # denominator: TEN
                  #     filter_enforced:
                  #       runtime_key: local_rate_limit_enforced
                  #       default_value:
                  #         # numerator: 100
                  #         numerator: 10
                  #         denominator: HUNDRED
                  #         # denominator: TEN
                  #     # response_headers_to_add:
                  #     #   - append_action: OVERWRITE_IF_EXISTS_OR_ADD
                  #     #     header:
                  #     #       key: x-local-rate-limit
                  #     #       value: "true"
                  #     # local_rate_limit_per_downstream_connection: false

                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: "./certs/example-com.crt"
                    private_key:
                      filename: "./certs/example-com.key"
        # transport_socket:
        #   name: envoy.transport_sockets.tls
        #   typed_config:
        #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        #     common_tls_context:
        #       tls_certificates:
        #       - certificate_chain: {filename: "certs/example-com.crt"}
        #         private_key: {filename: "certs/example-com.pem"}
        #       # validation_context:
        #       #   trusted_ca:
        #       #     filename: certs/cacert.pem
  clusters:
    - name: echo_service
      # - name: rate_limit_cluster
      connect_timeout: 0.25s
      # type: logical_dns
      type: STATIC

      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: echo_service
        # cluster_name: rate_limit_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 9090
# actions:
#   - { generic_key: { descriptor_value: some_value } }
# limit:
#   metadata_key:
#     key: test.filter.key
#     path:
#       - key: test
# test.filter.key:
#   test:
#     requests_per_unit: 3
#     unit: HOUR
